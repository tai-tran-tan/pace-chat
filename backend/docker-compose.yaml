networks:
  cassandra-pace:
    driver: bridge

services:
  cassandra-db:
    image: "cassandra:5.0.4"
    container_name: "cassandra-db"
    ports:
      - "7000:7000"
    networks:
      - cassandra-pace
    environment:
      - CASSANDRA_CLUSTER_NAME=pace-cluster
    volumes:
      - ./database/cassandra:/var/lib/cassandra:rw
      - ./database/cassandra.yaml:/etc/cassandra/cassandra.yaml
    restart:
      on-failure
    healthcheck:
      test: [ "CMD-SHELL", "nodetool status" ]
      interval: 2m
      start_period: 2m
      timeout: 10s
      retries: 3
  keycloak:
    image: quay.io/keycloak/keycloak:26.3.1
    container_name: keycloak_web
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres-kc:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=password
      - KC_HOSTNAME=localhost
      - KC_HOSTNAME_PORT=8080
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_LOG_LEVEL=info
      - KC_METRICS_ENABLED=true
      - KC_HEALTH_ENABLED=true
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
#      - KC_FEATURES=declarative-user-profile
    command: start-dev
#    healthcheck:
#      test: "curl -f http://localhost:8080/health/ready"
#      interval: 5s
#      timeout: 10s
#      retries: 10
    depends_on:
      postgres-kc:
        condition: service_healthy
    networks:
      - cassandra-pace
    ports:
      - "8080:8080"
  postgres-kc:
    image: postgres:15
    container_name: postgres-kc
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
    networks:
      - cassandra-pace

volumes:
  postgres_data:
